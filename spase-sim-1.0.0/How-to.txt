-- SQLite method ---
The metadata model is maintained in a database.
This database is accessed by other tools to generate all
the different forms of documentation and representation.

From the folder with the "tab" files:

%> cd ../sqlite
%> bash ./clear-version.sh x.x.x spase-sim
%> bash ./load-tables.sh spase-sim

where "x.x.x" is the version number to update.

Then copy the "spase-sim.db" file into the webapp for the root web site.

%> copy spase-sim.db  "..\..\..\webapp\root\data\"

The copy doclet files used in the generation of references and guides.

%> cd ../doclet
%> copy /Y * "..\..\..\webapp\root\data\doclet\spase-sim\Version_x_x_x"

From the folder containing the "model-tools/build/bin":
Note: The Simulation Extensions override Spase, Granule and Particle classes.

%> cd ..\..\..\java\model-tools\build\bin
%> bash ./makeall.sh x.x.x spase-sim http://www.spase-group.org/data/schema/spase-n_n_n.xsd Spase,Granule,Particle

** Note: Use "spase-n_n_n-draft.xsd" if connecting to a draft version of the base schema **

and then run the schema generation script to use Oxygen to generate
some of the documentation. Instructions on how to run the command
are displayed when "makeall.sh" completes.

If a draft version run
%> bash ./makedraft.sh x.x.x spase-sim

If a previous draft exists and this is a release, clear the old draft versions

%> bash ./cleardraft.sh x.x.x spase-sim

Commit the website to the git repository

%> cd ..\..\..\..\webapp\root
%> git add .
%> git commit -a -m "Update web site with new version of metadata model."
%> git push

Login to to web server and pull web site

%> cd /var/www/spase/site/root
%> git pull

Do the same for the SPASE School.

--- Old MYSQL method ---
Managing the SPASE data model database.

All database operations are performed with SQL commands.
To run an SQL command first set the default directory to 
the one containing the SQL scripts then login to the 
MySQL database server.

%> cd tools/database
%> mysql -p

And switch to the "spase" database:

mysql> use spase

Then perform one of the following tasks.

Loading data into the database, clearing existing definitions first.
Note: You need to edit "clearversion.sql" to make sure it operates on
      the right version.
      
mysql> source clearversion.sql;
mysql> source dataload.sql;

To create the database and tables:

mysql> source CreateDatabase.sql;

To grant access rights to extra locations/services.

mysql> source grant.sql;

To truncate the contents of all tables:

mysql> TruncateTables.sql;